---
- name: Configure WiFi Network
  hosts: localhost
  become: yes
  vars:
    wifi_ssid: "{{ lookup('env', 'WIFI_SSID') | default('') }}"
    wifi_password: "{{ lookup('env', 'WIFI_PSK') | default('') }}"
    wifi_interface: "{{ lookup('env', 'WIFI_INTERFACE') | default('wlan0') }}"
  
  tasks:
    - name: Create wpa_supplicant configuration directory
      ansible.builtin.file:
        path: /etc/wpa_supplicant
        state: directory
        mode: '0755'

    - name: Generate wpa_supplicant configuration
      ansible.builtin.copy:
        dest: /etc/wpa_supplicant/wpa_supplicant.conf
        content: |
          ctrl_interface=/run/wpa_supplicant
          update_config=1
          
          network={
            ssid="{{ wifi_ssid }}"
            psk="{{ wifi_password }}"
            key_mgmt=WPA-PSK
          }
        mode: '0600'
      when:
        - wifi_ssid != ''
        - wifi_password != ''

    - name: Create wpa_supplicant service directory
      ansible.builtin.file:
        path: /etc/sv/wpa_supplicant
        state: directory
        mode: '0755'

    - name: Create wpa_supplicant run script
      ansible.builtin.copy:
        dest: /etc/sv/wpa_supplicant/run
        content: |
          #!/bin/sh
          exec 2>&1
          exec wpa_supplicant -c/etc/wpa_supplicant/wpa_supplicant.conf -D{{ 'nl80211' if wifi_interface.startswith('wlan') else 'wext' }} -i{{ wifi_interface }} -B
        mode: '0755'

    - name: Enable wpa_supplicant service
      ansible.builtin.file:
        path: /var/service/wpa_supplicant
        src: /etc/sv/wpa_supplicant
        state: link
        force: yes

    - name: Wait for wpa_supplicant to start
      ansible.builtin.wait_for:
        timeout: 5

    - name: Bring up wireless interface
      ansible.builtin.command: ifconfig {{ wifi_interface }} up
      changed_when: false

    - name: Wait for DHCP to get an IP address
      ansible.builtin.shell: |
        timeout=30
        while [ $timeout -gt 0 ]; do
          if ifconfig {{ wifi_interface }} | grep -q "inet "; then
            exit 0
          fi
          sleep 1
          timeout=$((timeout - 1))
        done
        exit 1
      changed_when: false
      register: dhcp_result
      ignore_errors: yes

    - name: Check network connectivity
      ansible.builtin.wait_for:
        host: 8.8.8.8
        port: 53
        timeout: 30
      when: dhcp_result.rc == 0