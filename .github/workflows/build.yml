name: "Void Linux for uConsole"
on:
  workflow_dispatch:
jobs:
  build:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set environment variables
      id: env_setup
      run: echo "TIMESTAMP=$(date '+%s')" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        chmod +x scripts/01-install-deps.sh
        ./scripts/01-install-deps.sh

    - name: Clone external repos
      run: |
        git clone https://github.com/raspberrypi/userland
        rm -rf userland/.git

    - name: Setup CCache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Cross-compile kernel
      run: |
        chmod +x scripts/02-build-kernel.sh
        ./scripts/02-build-kernel.sh

    - name: Create and setup disk image
      id: disk_setup
      run: |
        chmod +x scripts/03-create-disk-image.sh
        LOOP_DEV=$(./scripts/03-create-disk-image.sh)
        # XXX echo "LOOP_DEV=${LOOP_DEV}" >> $GITHUB_ENV

    - name: Setup system
      run: |
        chmod +x scripts/04-setup-system.sh
        ./scripts/04-setup-system.sh

    - name: Cleanup loop device
      run: sudo losetup -D /dev/loop0 # XXX ${{ env.LOOP_DEV }}

    - name: Create release archive
      run: |
        chmod +x scripts/05-create-release.sh
        ./scripts/05-create-release.sh ${{ env.TIMESTAMP }}
    - name: Create GH release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: void_uconsole_os-${{ env.TIMESTAMP }}
        tag_name: ${{ env.TIMESTAMP }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload zipped image to release artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: void_uconsole_os-${{ env.TIMESTAMP }}.7z
        asset_name: void_uconsole_os-${{ env.TIMESTAMP }}.7z
        asset_content_type: application/x-7z-compressed
    - name: Upload kernel tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: linux/linux-${{ env.KERNEL_VERSION }}-v8-arm64.tar.xz
        asset_name: linux-${{ env.KERNEL_VERSION }}-v8-arm64.tar.xz
        asset_content_type: application/x-tar+xz
    - name: Upload kernel headers tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: linux-headers-${{ env.KERNEL_VERSION }}-v8-arm64.tar.xz
        asset_name: linux-headers-${{ env.KERNEL_VERSION }}-v8-arm64.tar.xz
        asset_content_type: application/x-tar+xz
